#Q. 61: Seasoners
#The year is divided into four seasons: spring, summer, fall and winter. While the exact dates that the seasons change vary a little bit from year to year because of the way 
#that the calendar is constructed, we will use the following dates for this exercise:
#Season First day
#Summer March 20
#Spring June 21
#Fall September 22
#Winter December 21
#Create a program that reads a month and day from the user. The user will enter the name of the month as a string, followed by the day within the month as an integer.
#Then your program should display the season associated with the date that was entered.
#Note: Enter First three letter for month example: Jan for january, Feb for Feburary ans so on....and first letter of the month should be capital

a,b=input(),int(input())
if(a=='Mar' and b==20):
  print("Summer")
if(a=='Jun' and b==21):
  print("Spring")
if(a=='Sep' and b==22):
  print("Fall")
if(a=='Dec' and b==21):
  print("Winter")

#Q. 62: Max Sum without Adjacents
#Given an array of positive numbers, find the maximum sum of a subsequence with the constraint that no 2 numbers in the sequence should be adjacent in the array. So 3 2 7 10 
#should return 13 (sum of 3 and 10) or 3 2 5 10 7 should return 15 (sum of 3, 5 and 7).

import sys
def a(b,c,d,e=-sys.maxsize):
  if(c==d):
    return(0)
  f=0
  if((e+1)!=c):
    f=a(b,c+1,d,c)+b[c]
  return(max(f,a(b,c+1,d,e)))
g=int(input())
for i in range(g):
  h=int(input())
  j=list(map(int,input().split()))
  print(a(j,0,len(j)))

#Q. 63: Transpose of Matrix
#Write a python program to create a NESTED LIST and print the diagonal elements of the matrix
#Hint:
#1. Input the number of rows First Matrix
#2. Input the number of Columns for first Matrix
#3. Display the elements of the matrix
#4. Display the transpose of the matrix

a,b,c=int(input()),int(input()),[]
for i in range(a):
  d=[]
  for j in range(b):
    d.append(int(input()))
  c.append(d)
e = [[c[j][i] for j in range(len(c))] for i in range(len(c[0]))]
print("Given Matrix")
for i in c:
  print(i)
print("Transpose of the matrix")
for i in e:
   print(i)

#Q. 64: Spirally traversing a matrix
#Traverse a 4x4 matrix of integers in spiral form.

a=int(input())
def c(d):
  A,e,f,g,h=[],0,0,len(d)-1,len(d[0])-1
  while True:
    if(f>h):
      break
    for i in range(f,h+1):
      A.append(d[e][i])
    e+=1
    if(e>g):
      break
    for i in range(e,g+1):
      A.append(d[i][h])
    h-=1
    if(f>h):
      break
    for i in range(h,f-1,-1):
      A.append(d[g][i])
    g-=1
    if(e>g):
      break
    for i in range(g,e-1,-1):
      A.append(d[i][f])
    f+=1
  print(A)
for i in range(a):
  b=[] 
  for j in range(4):
    b.append([int(j) for j in input().split()])
  c(b)

#Q. 65: Maximum sum Rectangle
#Given a 2D array, find the maximum sum subarray in it. For example, in the following 2D array, the maximum sum subarray is highlighted with blue rectangle and sum of this 
#subarray is 29.

def a(b,c,d,e):
  f,g,d[0],h=0,-999999999999,-1,0
  for i in range(e):
    f+=b[i]
    if(f<0):
      f,h=0,(i+1)
    elif(f>g):
      g,c[0],d[0]=f,h,i
  if(d[0]!=-1):
    return(g)
  g,c[0],d[0]=b[0],0,0
  for i in range(1,e):
    if(b[i]>g):
      g,c[0],d[0]=b[i],i,i
  return(g)
def k(l):
  m,n,o,p,q=-999999999999,[]*4,0,[0],[0]
  for r in range(5):
    n=[0] * 4
    for s in range(r,5):
      for i in range(4):
        n[i]+=l[i][s]
      o=a(n,p,q,4)
      if(o>m):
        m,t,u,v,w=o,r,s,p[0],q[0]
  print(m)
A = [[1, 2, -1, -4, -20],[-8, -3, 4, 2, 1],[3, 8, 10, 1, 3],[-4, -1, 1, 7, -6]]
k(A)

#Q. 66: Minimum element in a sorted and rotated array
#A sorted array A[ ] with distinct elements is rotated at some unknown point, the task is to find the minimum element in it.

a=int(input())
for i in range(a):
  b=int(input())
  c=input().split()
  d=int(c[0])
  for i in c:
    if(int(i)<d):
      d=int(i)
print(d)

#Q. 67: Matrix Addition
#Write a python program to create a NESTED LIST and add the two matrix. (Without Square Brackets)
#Hint:
#1. Input the number of rows and columns for First Matrix
#2. Input the number of rows and columns for Second Matrix
#3. Display the first matrix elements in Matrix format (Without commas and Square Bracket)
#4. Display the first matrix elements in Matrix format (Without commas and Square Bracket)
#5. Display the result of sum of two matrix (Without commas and Square Bracket)

a,b=int(input()),int(input())
c=[[int(input()) for x in range (a)] for y in range(b)]
d=[[int(input()) for x in range (a)] for y in range(b)]
print("Matrix 1")
for i in range(a):
  for j in range(b):
    print(c[i][j])
print("Matrix 2")
for i in range(a):
  for j in range(b):
    print(d[i][j])
print("Sum of Matrix")
for i in range(a):
  for j in range(b):
    print(c[i][j]+d[i][j])

#Q. 68: Matrix Multiplication 2
#Write a program for matrix multiplication

a,b=int(input()),int(input())
c=[[int(input()) for x in range(a)] for y in range(b)]
d,e=int(input()),int(input())
f=[[int(input()) for x in range(d)] for y in range(e)]
g=[[0 for x in range(a)] for y in range(e)]
for i in range(a):
  for j in range(e):
    for k in range(d):
      g[i][j]+=c[i][k]*f[k][j]
for i in g:
  print(i)

#Q. 69: Row with minimum number of 1's
#Determine the row index with minimum number of ones. The given 2D matrix has only zeroes and ones and also the matrix is sorted row wise . If two or more rows have same number of 1's than print the row with smallest index.
#Note: If there is no '1' in any of the row than print '-1'.

a=int(input())
for i in range(a):
    b=input()
    c=b.split()
    d,e=int(c[0]),int(c[1])
    f,g,h,j=d*e,[],input().split(),0
    for i in range(d):
        k=[]
        for j in range(e):
            l=int(h[j])
            j+=1
            k.append(l)
        g.append(k)
    m,n,o,p = -999,999,-1,0
    for i in g:
        q=i.count(1)
        if(q!=0):
            if(q<n):
                n=q
                o=p
                m=0
        p+=1
    if(m==-999):
        print("minus1")
    else:
        print(o)

#Q. 70: Matrix Subtraction
#Write a python program to create a NESTED LIST and subtract the two matrix. (Without Square Brackets)
#Hint:
#1. Input the number of rows and columns for First Matrix
#2. Input the number of rows and columns for Second Matrix
#3. Display the first matrix elements in Matrix format (Without commas and Square Bracket)
#4. Display the first matrix elements in Matrix format (Without commas and Square Bracket)
#5. Display the result of difference of two matrix (Without commas and Square Bracket)

a,b=int(input()),int(input())
c=[[int(input()) for x in range (a)] for y in range(a)]
d=[[int(input()) for x in range (b)] for y in range(b)]
e=[[0]*a for i in range(b)]
for i in range(a):
  for j in range(b):
    e[i][j]=c[i][j]-d[i][j]
print("Matrix 1")
for i in c:
  print(*i,"")
print("Matrix 2")
for i in d:
  print(*i,"")
print("Difference of Matrix")
for i in e:
  print(*i,"")
