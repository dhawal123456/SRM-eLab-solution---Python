#Q. 41: Prime Factor
#Python Program to Compute Prime Factors of an Integer

a=int(input())
b=1
while(b<=a):
    c=0
    if(a%b==0):
        d=1
        while(d<=b):
            if(b%d==0):
                c+=1
            d+=1
        if(c==2):
            print(b)
    b+=1

#Q. 42: Does a String Represent an Integer
#In this exercise you will write a function named isInteger that determines whether or not the characters in a string represent a valid integer. When determining if a string 
#represents an integer you should ignore any leading or trailing white space.
#Once this white space is ignored, a string represents an integer if its length is at least 1 and it only contains digits, or if its first character is either + or - and the 
#first character is followed by one or more characters, all of which are digits.
#Write a main program that reads a string from the user and reports whether or not it represents an integer. Ensure that the main program will not run if the file containing 
#your solution is imported into another program

a=input()
for i in a:
  if(i!=" "):
    if(len(a)>=1 and (i>="0" and i<="9") or (i=="+" or i=="-")):
      print("Contains Integer")
      break
    else:
      print("Does not Contain")
      break

#Q. 43: All Divisors
#Python Program to Generate all the Divisors of an Integer

a=int(input())
for i in range(1,a+1):
  if(a%i==0):
    print(i)

#Q. 44: Compute the Hypotenuse
#Write a function that takes the lengths of the two shorter sides of a right triangle as its parameters. Return the hypotenuse of the triangle, computed using Pythagorean 
#theorem, as the functions result.
#Include a main program that reads the lengths of the shorter sides of a right triangle from the user, uses your function to compute the length of the hypotenuse, and displays 
#the result.

import math
def a(b,c):
  return (int(math.sqrt(b*b+c*c)))
d=int(input())
e=int(input())
print(a(d,e))

#Q. 45: Compute the Hypotenuse
#Write a function that takes the lengths of the two shorter sides of a right triangle as its parameters. Return the hypotenuse of the triangle, computed using Pythagorean 
#theorem, as the functions result.
#Include a main program that reads the lengths of the shorter sides of a right triangle from the user, uses your function to compute the length of the hypotenuse, and displays 
#the result.

import math
def a(b,c):
  return (int(math.sqrt(b*b+c*c)))
d=int(input())
e=int(input())
print(a(d,e))

#Q. 46: Is Valid Triangle ot Not ?
#If you have 3 straws, possibly of differing lengths, it may or may not be possible to lay them down so that they form a triangle when their ends are touching.
#For example, if all of the straws have a length of 6 inches. then one can easily construct an equilateral triangle using them. However, if one straw is 6 inches. long, while 
#the other two are each only 2 inches. long, then a triangle cannot be formed.
#In general, if any one length is greater than or equal to the sum of the other two then the lengths cannot be used to form a triangle. Otherwise they can form a triangle.
#Write a function that determines whether or not three lengths can form a triangle.
#The function will take 3 parameters and return a Boolean result. In addition, write a program that reads 3 lengths from the user and demonstrates the behaviour of this 
#function.

def a(b,c,d):
  return (b<c+d and c<b+d and d<b+c)
e=int(input())
f=int(input())
g=int(input())
if(a(e,f,g)):
  print("Yes Triangle can be formed")
else:
  print("Triangle cannot be formed")

#Q. 47: Perfect Number
#Write a Python Program to Check if a Number is a Perfect Number

a=int(input())
b=0
for i in range(1,a):
  if(a%i==0):
    b+=i
if(a==b):
  print("The number is a Perfect number!")
else:
  print("The number is not a Perfect number!")

#Q. 48: Shipping Calculator
#An online retailer provides express shipping for many of its items at a rate of 750 for the first item, and 200 for each subsequent item. Write a function that takes the 
#number of items in the order as its only parameter.
#Return the shipping charge for the order as the functions result. Include a main program that reads the number of items purchased from the user and displays the shipping 
#charge.

def a(b):
  return (750+(b-1)*200)
c=int(input())
print(a(c))

#Q. 49: Check My Password
#In this exercise you will write a function that determines whether or not a password is good. We will define a good password to be a one that is at least 8 characters long and 
#contains at least one uppercase letter, at least one lowercase letter, and at least one number,one Special character.
#Your function should return true if the password passed to it as its only parameter is good.
#Otherwise it should return false. Include a main program that reads a password from the user and reports whether or not it is good.
#Ensure that your main program only runs when your solution has not been imported into another file.

a=input()
b,c,d,e,f=0,0,0,0,0
g=['@','#','$','&']
if(len(a)>=8):
  b+=1
for i in a:
  if(i>='a' and i<='z'):
    c+=1
  if(i>='A' and i<='Z'):
    d+=1
  if(i>='0' and i<='9'):
    e+=1
  if i in g:
    f+=1
if(b>=1 and c>=1 and d>=1 and e>=1 and f>=1):
  print("Good Password")
else:
  print("Try Again")

#Q. 50: Taxi Fare
#In a particular jurisdiction in India after implementing GST the taxi fares are altered. Taxi fares consist of a base fare of 200 and GST tax as 4% of base fare for every 140 
#meters traveled. Write a function that takes the distance traveled (in kilometers) as its only parameter and returns the total fare as its only result. Write a main program 
#that demonstrates the function.

a=int(input())
print('%.2f'%(200+((a*1000)/140)*8))
